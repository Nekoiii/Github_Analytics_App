{"ast":null,"code":"var _jsxFileName = \"/front/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.scss\";\nimport \"./scss/variables.scss\";\nimport \"./scss/style.scss\";\nimport \"./scss/frequently_used.scss\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport { RepoInfo } from \"./components/RepoInfo\";\nimport { Statistic } from \"./components/Statistic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:3001/graphql\",\n  cache: new InMemoryCache()\n});\nfunction App() {\n  _s();\n  //* for test\n  const repoId = 1;\n  const fromYearMonth = 202301;\n  const toYearMonth = 202312;\n  const repoOwner = \"Nekoiii\";\n  const repoName = \"Rails_Tutorial\";\n  const [fromDateInput, setFromDateInput] = useState(\"\");\n  const handleDateInput = e => {\n    console.log(\"e.target.value\", e.target.value);\n    setFromDateInput(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: fromDateInput,\n        onChange: e => handleDateInput(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RepoInfo, {\n      repoId: repoId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      repoId: repoId,\n      fromYearMonth: fromYearMonth,\n      toYearMonth: toYearMonth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"29fg064xuG025cZ6APCaKCmUMWA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ApolloClient","InMemoryCache","ApolloProvider","RepoInfo","Statistic","jsxDEV","_jsxDEV","client","uri","cache","App","_s","repoId","fromYearMonth","toYearMonth","repoOwner","repoName","fromDateInput","setFromDateInput","handleDateInput","e","console","log","target","value","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/front/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport \"./scss/variables.scss\";\nimport \"./scss/style.scss\";\nimport \"./scss/frequently_used.scss\";\n\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport { GithubPullRequests } from \"./components/GithubPullRequests\";\nimport { RepoInfo } from \"./components/RepoInfo\";\nimport { Statistic } from \"./components/Statistic\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:3001/graphql\",\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  //* for test\n  const repoId = 1;\n  const fromYearMonth = 202301;\n  const toYearMonth = 202312;\n  const repoOwner = \"Nekoiii\";\n  const repoName = \"Rails_Tutorial\";\n\n  const [fromDateInput, setFromDateInput] = useState(\"\");\n\n  const handleDateInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"e.target.value\", e.target.value);\n    setFromDateInput(e.target.value);\n  };\n\n  return (\n    <ApolloProvider client={client}>\n      <div>\n        Date:\n        <input\n          type=\"text\"\n          value={fromDateInput}\n          onChange={(e) => handleDateInput(e)}\n        />\n      </div>\n\n      <RepoInfo repoId={repoId} />\n      <Statistic\n        repoId={repoId}\n        fromYearMonth={fromYearMonth}\n        toYearMonth={toYearMonth}\n      />\n      {/* <GithubPullRequests /> */}\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAGvC,OAAO,YAAY;AACnB,OAAO,uBAAuB;AAC9B,OAAO,mBAAmB;AAC1B,OAAO,6BAA6B;AAEpC,SAASC,YAAY,EAAEC,aAAa,EAAEC,cAAc,QAAQ,gBAAgB;AAE5E,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,SAAS,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAG,IAAIP,YAAY,CAAC;EAC9BQ,GAAG,EAAE,+BAA+B;EACpCC,KAAK,EAAE,IAAIR,aAAa,CAAC;AAC3B,CAAC,CAAC;AAEF,SAASS,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAMC,MAAM,GAAG,CAAC;EAChB,MAAMC,aAAa,GAAG,MAAM;EAC5B,MAAMC,WAAW,GAAG,MAAM;EAC1B,MAAMC,SAAS,GAAG,SAAS;EAC3B,MAAMC,QAAQ,GAAG,gBAAgB;EAEjC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMoB,eAAe,GAAIC,CAAsC,IAAK;IAClEC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IAC7CN,gBAAgB,CAACE,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,oBACElB,OAAA,CAACJ,cAAc;IAACK,MAAM,EAAEA,MAAO;IAAAkB,QAAA,gBAC7BnB,OAAA;MAAAmB,QAAA,GAAK,OAEH,eAAAnB,OAAA;QACEoB,IAAI,EAAC,MAAM;QACXF,KAAK,EAAEP,aAAc;QACrBU,QAAQ,EAAGP,CAAC,IAAKD,eAAe,CAACC,CAAC;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENzB,OAAA,CAACH,QAAQ;MAACS,MAAM,EAAEA;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5BzB,OAAA,CAACF,SAAS;MACRQ,MAAM,EAAEA,MAAO;MACfC,aAAa,EAAEA,aAAc;MAC7BC,WAAW,EAAEA;IAAY;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEY,CAAC;AAErB;AAACpB,EAAA,CAnCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}